CREATE DATABASE IF NOT EXISTS biometric_system;
USE biometric_system;

-- -----------------------------------------------------
-- TIPO DOCUMENTO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS biometric_system.TIPO_DOCUMENTO
 (
  ID_TIPO_DOC VARCHAR(10) NOT NULL  ,
  DES_TD VARCHAR(30) NOT NULL ,
  ESTADO_TD TINYINT(1) NOT NULL ,
  PRIMARY KEY (ID_TIPO_DOC)
  )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- PERSONA
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS biometric_system.PERSONA
 (
  ID_PERSONA VARCHAR(15) NOT NULL,
  TD_PERSONA VARCHAR(10) NOT NULL,
  PRIMER_NOMBRE VARCHAR(45) NOT NULL,
  SEGUNDO_NOMBRE VARCHAR(45) NULL,
  PRIMER_APELLIDO VARCHAR(45) NOT NULL,
  SEGUNDO_APELLIDO VARCHAR(45) NULL,
  TELEFONO BIGINT(15) NOT NULL ,
  PRIMARY KEY (ID_PERSONA, TD_PERSONA),
  CONSTRAINT fk_PERSONA_TIPO_DOCUMENTO
    FOREIGN KEY (TD_PERSONA)
    REFERENCES biometric_system.TIPO_DOCUMENTO (ID_TIPO_DOC)
	ON DELETE CASCADE
    ON UPDATE CASCADE
    )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- ROL
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS biometric_system.ROL
 (
  ID_ROL INT NOT NULL ,
  DESC_ROL VARCHAR(45) NOT NULL ,
  ESTADO_ROL BOOLEAN  NOT NULL ,
  PRIMARY KEY (ID_ROL)
  )
ENGINE = InnoDB;

-- -----------------------------------------------------
-- PARENTESCO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS biometric_system.PARENTESCO
 (
  ID_PARENTESCO INT NOT NULL,
  DES_PARENTESCO VARCHAR(45) NOT NULL ,
  ESTADO_PARENTESCO TINYINT(1) NOT NULL ,
  PRIMARY KEY (ID_PARENTESCO)
  )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- BENEFICIARIO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS biometric_system.BENEFICIARIO
 (
  ID_BENEFICIARIO VARCHAR(15) NOT NULL ,
  TD_BENEFICIARIO VARCHAR(10) NOT NULL,
  ESTADO_BENEFICIARIO BOOLEAN NOT NULL,
  PRIMARY KEY (ID_BENEFICIARIO, TD_BENEFICIARIO),
  CONSTRAINT fk_CLIENTE_PERSONA1
    FOREIGN KEY (ID_BENEFICIARIO, TD_BENEFICIARIO)
    REFERENCES biometric_system.PERSONA (ID_PERSONA , TD_PERSONA)
    ON DELETE CASCADE
    ON UPDATE CASCADE
    )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- RECUPERAR CONTRASEÑA
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS biometric_system.RECUPERAR
 (
  ID_RECUPERACION INT NOT NULL AUTO_INCREMENT ,
  CORREO_RECUP VARCHAR(45) NOT NULL,
  PRIMARY KEY (ID_RECUPERACION)
  )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- CAMBIO_CONTRASEÑA
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS biometric_system.CAMBIO_CONTRASEÑA
 (
  ID_CAMBIO INT NOT NULL AUTO_INCREMENT,
  CONTRA_ANTERIOR VARCHAR(45) NOT NULL,
  CONTRA_NUEVA VARCHAR(45) NOT NULL,
  CONFIRAMCION_CONTRA VARCHAR(45) NOT NULL,
  PRIMARY KEY (ID_CAMBIO)
  )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- USUARIO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS biometric_system.USUARIO 
(
  ID_USUARIO INT NOT NULL ,
  NUMERO_DOC VARCHAR(15) NOT NULL ,
  TD_USUARIO VARCHAR(10) NOT NULL ,
  CONTRASEÑA VARCHAR(12) NOT NULL,
  CORREO_USUARIO VARCHAR(45) NOT NULL ,
  ESTADO_USUARIO BOOLEAN NOT NULL ,
  RECUPERAR_CONTRASEÑA INT ,
  CAMBIO_CONTRASEÑA INT ,
  PRIMARY KEY (ID_USUARIO, NUMERO_DOC, TD_USUARIO),
  CONSTRAINT fk_USUARIO_PERSONA1
    FOREIGN KEY (NUMERO_DOC , TD_USUARIO)
    REFERENCES biometric_system.PERSONA (ID_PERSONA ,TD_PERSONA)
	ON DELETE CASCADE
    ON UPDATE CASCADE,

    CONSTRAINT fk_USUARIO_RECUPERACION1
    FOREIGN KEY (RECUPERAR_CONTRASEÑA)
    REFERENCES biometric_system.RECUPERAR(ID_RECUPERACION)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
    
	CONSTRAINT fk_USUARIO_CAMBIO_CONTRASEÑA1
    FOREIGN KEY (CAMBIO_CONTRASEÑA)
    REFERENCES biometric_system.CAMBIO_CONTRASEÑA (ID_CAMBIO)
	ON DELETE CASCADE
    ON UPDATE CASCADE
    )  
    ENGINE = InnoDB;
    
-- -----------------------------------------------------
-- CONTACTO_EMERGENCIA
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS biometric_system.CONTACTO_EMERGENCIA
 (
  ID_CONTACTO VARCHAR(15) NOT NUll ,
  TD_CONTACTO VARCHAR(10) NOT NULL ,
  ESTADO_CONTACTO BOOLEAN NOT NULL,
  ID_PARENTESCO_C INT NOT NULL,
  PRIMARY KEY (ID_CONTACTO, TD_CONTACTO),
  CONSTRAINT fk_ACUDIENTE_PERSONA1
    FOREIGN KEY (ID_CONTACTO , TD_CONTACTO)
    REFERENCES biometric_system.PERSONA(ID_PERSONA, TD_PERSONA),
    CONSTRAINT fk_PARENTESCO
    FOREIGN KEY (ID_PARENTESCO_C)
    REFERENCES biometric_system.PARENTESCO(ID_PARENTESCO)
    ON DELETE CASCADE
    ON UPDATE CASCADE
    )
ENGINE = InnoDB;

-- -----------------------------------------------------
-- ROL_USUARIO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS biometric_system.ROL_USUARIO
 (
  ROL_ID_ROL INT NOT NULL,
  USUARIO_ID_USUARIO INT NOT NULL,
  USUARIO_NUMERO_DOC VARCHAR(15) NOT NULL,
  USUARIO_TD_USUARIO VARCHAR(10) NOT NULL,
  PRIMARY KEY (ROL_ID_ROL, USUARIO_ID_USUARIO, USUARIO_NUMERO_DOC, USUARIO_TD_USUARIO),
  CONSTRAINT fk_ROL_has_USUARIO_ROL1
    FOREIGN KEY (ROL_ID_ROL)
    REFERENCES biometric_system.ROL(ID_ROL)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT fk_ROL_has_USUARIO_USUARIO1
    FOREIGN KEY (USUARIO_ID_USUARIO, USUARIO_NUMERO_DOC , USUARIO_TD_USUARIO)
    REFERENCES biometric_system.USUARIO (ID_USUARIO, NUMERO_DOC , TD_USUARIO)
    ON DELETE CASCADE
    ON UPDATE CASCADE
    )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- LOGIN
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS biometric_system.LOGIN
 (
  ID_LOGIN INT NOT NULL ,
  NUMERO_DOC_LOG VARCHAR(15) NOT NULL ,
  TIPO_DOC VARCHAR(10) NOT NULL,
  CONTRASEÑA_LOGIN VARCHAR(45) NOT NULL,
  ROL_ID_ROL INT NOT NULL,
  PRIMARY KEY (ID_LOGIN, NUMERO_DOC_LOG, TIPO_DOC),
  CONSTRAINT fk_LOGIN_USUARIO1
    FOREIGN KEY (NUMERO_DOC_LOG,TIPO_DOC)
    REFERENCES biometric_system.USUARIO(NUMERO_DOC, TD_USUARIO)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
    
  CONSTRAINT fk_LOGIN_ROL1
    FOREIGN KEY (ROL_ID_ROL)
    REFERENCES biometric_system.ROL(ID_ROL)
    ON DELETE CASCADE
    ON UPDATE CASCADE
    )
ENGINE = InnoDB;



-- -----------------------------------------------------
-- CIUDAD
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS biometric_system.CIUDAD
(
  ID_CIUDAD INT NOT NULL AUTO_INCREMENT ,
  DES_CIUDAD VARCHAR(45) NOT NULL ,
  ESTADO_CIUDAD BOOLEAN NOT NULL ,
  PRIMARY KEY (ID_CIUDAD)
  )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- EPS
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS biometric_system.EPS
(
  ID_EPS INT NOT NULL AUTO_INCREMENT ,
  DES_EPS VARCHAR(20) NOT NULL ,
  ESTADO_EPS BOOLEAN NOT NULL ,
  PRIMARY KEY (ID_EPS)
  )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- CLIENTE
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS biometric_system.CLIENTE
 (
  ID_CLIENTE VARCHAR(15) NOT NULL ,
  TD_CLIENTE VARCHAR(10) NOT NULL ,
  DIRECCION VARCHAR(45) NOT NULL ,
  ESTADO_CLIENTE TINYINT(1) NOT NULL ,
  NUMERO_DOC_CONTACTO_E VARCHAR(15) NOT NULL ,
  TD_CONTACTO_E VARCHAR(10) NOT NULL,
  FK_CIUDAD INT NOT NULL  ,
  FK_EPS INT NOT NULL,
  PRIMARY KEY (ID_CLIENTE, TD_CLIENTE),
  CONSTRAINT fk_CLIENTE_USUARIO1
    FOREIGN KEY (ID_CLIENTE , TD_CLIENTE)
    REFERENCES biometric_system.USUARIO(NUMERO_DOC , TD_USUARIO)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT fk_CLIENTE_ACUDIENTE1
    FOREIGN KEY (NUMERO_DOC_CONTACTO_E , TD_CONTACTO_E)
    REFERENCES biometric_system.CONTACTO_EMERGENCIA(ID_CONTACTO, TD_CONTACTO)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT fk_CLIENTE_CIUDAD1
    FOREIGN KEY (FK_CIUDAD)
    REFERENCES biometric_system.CIUDAD (ID_CIUDAD)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT fk_CLIENTE_EPS1
    FOREIGN KEY (FK_EPS)
    REFERENCES biometric_system.EPS(ID_EPS)
    ON DELETE CASCADE
    ON UPDATE CASCADE
    )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- ADMINISTRADOR
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS biometric_system.ADMINISTRADOR
 (
  USUARIO_NUMERO_DOC VARCHAR(15) NOT NULL ,
  USUARIO_TD_USUARIO VARCHAR(10) NOT NULL ,
  PRIMARY KEY (USUARIO_NUMERO_DOC, USUARIO_TD_USUARIO),
  CONSTRAINT fk_ADMINISTRADOR_USUARIO1
    FOREIGN KEY (USUARIO_NUMERO_DOC, USUARIO_TD_USUARIO)
    REFERENCES biometric_system.USUARIO (NUMERO_DOC , TD_USUARIO)
    ON DELETE CASCADE
    ON UPDATE CASCADE
    )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- TIPO_VEHICULO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS biometric_system.TIPO_VEHICULO
(
  ID_TIPO_VEH INT NOT NULL ,
  DESC_TV VARCHAR(15) NOT NULL,
  ESTADO_TV BOOLEAN NOT NULL ,
  PRIMARY KEY (ID_TIPO_VEH)
  )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- MODELO_VEHICULO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS biometric_system.MODELO_VEHICULO
 (
  ID_MODELO INT NOT NULL ,
  DES_MODELO VARCHAR(45) NOT NULL ,
  ESTADO_MODELO BOOLEAN NOT NULL ,
  PRIMARY KEY (ID_MODELO)
  )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- BIOMETRICO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS biometric_system.BIOMETRICO
 (
  ID_BIOMETRICO VARCHAR(20) NOT NULL ,
  PRIMARY KEY (ID_BIOMETRICO)
  )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- VEHICULO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS biometric_sYstem.VEHICULO
 (
  PLACA VARCHAR(15) NOT NULL ,
  COLOR VARCHAR(20) NOT NULL ,
  ESTADO_VEHI TINYINT(1) NOT NULL ,
  FK_TIPO_VEHICULO INT NOT NULL ,
  FK_MODELO INT NOT NULL ,
  FK_BIOMETRICO VARCHAR(20) NOT NULL ,
  PRIMARY KEY (PLACA),
  CONSTRAINT fk_VEHICULO_TIPO_VEHICULO1
    FOREIGN KEY (FK_TIPO_VEHICULO)
    REFERENCES biometric_system.TIPO_VEHICULO (ID_TIPO_VEH)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT fk_VEHICULO_MARCA_VEHICULO1
    FOREIGN KEY (FK_MODELO)
    REFERENCES biometric_system.MODELO_VEHICULO(ID_MODELO)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT fk_VEHICULO_BIOMETRICO1
    FOREIGN KEY (FK_BIOMETRICO)
    REFERENCES biometric_system.BIOMETRICO (ID_BIOMETRICO)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- CLIENTE_VEHICULO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS biometric_system.CLIENTE_VEHICULO
 (
  ID_CLIENTE_VEH VARCHAR(15) NOT NULL,
  TD_CLIENTE_VEH VARCHAR(10) NOT NULL ,
  VEHICULO_PLACA VARCHAR(15) NOT NULL,
  PRIMARY KEY (ID_CLIENTE_VEH, TD_CLIENTE_VEH, VEHICULO_PLACA),
  CONSTRAINT fk_CLIENTE_has_VEHICULO_CLIENTE1
    FOREIGN KEY (ID_CLIENTE_VEH , TD_CLIENTE_VEH)
    REFERENCES biometric_system.CLIENTE(ID_CLIENTE,TD_CLIENTE)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT fk_CLIENTE_has_VEHICULO_VEHICULO1
    FOREIGN KEY (VEHICULO_PLACA)
    REFERENCES biometric_system.VEHICULO(PLACA)
    ON DELETE CASCADE
    ON UPDATE CASCADE
    )
ENGINE = InnoDB;

-- -----------------------------------------------------
-- BENEFICIARIO_CLIENTE
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS biometric_system.BENEFICIARIO_CLIENTE
 (
  BENEFICIARIO_ID_BENEFICIARIO VARCHAR(15) NOT NULL,
  BENEFICIARIO_TD_BENEFICIARIO VARCHAR(10) NOT NULL,
  CLIENTE_ID_CLIENTE VARCHAR(15) NOT NULL,
  CLIENTE_TD_CLIENTE VARCHAR(10) NOT NULL,
  FK_PARENTESCO INT  NOT NULL,
  PRIMARY KEY (BENEFICIARIO_ID_BENEFICIARIO, BENEFICIARIO_TD_BENEFICIARIO, CLIENTE_ID_CLIENTE, CLIENTE_TD_CLIENTE),
  CONSTRAINT fk_BENEFICIARIO_has_CLIENTE_BENEFICIARIO1
    FOREIGN KEY (BENEFICIARIO_ID_BENEFICIARIO, BENEFICIARIO_TD_BENEFICIARIO)
    REFERENCES biometric_system.BENEFICIARIO (ID_BENEFICIARIO, TD_BENEFICIARIO)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT fk_BENEFICIARIO_has_CLIENTE_CLIENTE1
    FOREIGN KEY (CLIENTE_ID_CLIENTE , CLIENTE_TD_CLIENTE)
    REFERENCES biometric_system.CLIENTE(ID_CLIENTE , TD_CLIENTE)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT fk_BENEFICIARIO_CLIENTE_PARENTESCO1
    FOREIGN KEY (FK_PARENTESCO)
    REFERENCES biometric_system.PARENTESCO(ID_PARENTESCO)
    ON DELETE CASCADE
    ON UPDATE CASCADE
    )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- HUELLA
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS biometric_system.HUELLA 
(
  ID_HUELLA INT NOT NULL AUTO_INCREMENT ,
  DESC_HUELLA VARCHAR(45) NOT NULL ,
  HORA DATETIME NOT NULL ,
  FECHA DATETIME NOT NULL ,
  ESTADO_HUELLA BOOLEAN NULL ,
  FK_BIOMETRICO VARCHAR(20) NOT NULL,
  PRIMARY KEY (ID_HUELLA),
  CONSTRAINT fk_HUELLA_BIOMETRICO1
    FOREIGN KEY (FK_BIOMETRICO)
    REFERENCES biometric_system.BIOMETRICO (ID_BIOMETRICO)
    ON DELETE CASCADE
    ON UPDATE CASCADE
    )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- INGRESO_BENEFICIARIO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS biometric_system.INGRESO_BENEFICIARIO
 (
  ID_INGRESO_BENEF INT NOT NULL ,
  BENEFICIARIO_ID_BENEFICIARIO VARCHAR(15) NOT NULL ,
  BENEFICIARIO_TD_BENEFICIARIO VARCHAR(10) NOT NULL,
  PRIMARY KEY (ID_INGRESO_BENEF),
  CONSTRAINT fk_INGRESO_BENEFICIARIO_BENEFICIARIO1
    FOREIGN KEY (BENEFICIARIO_ID_BENEFICIARIO , BENEFICIARIO_TD_BENEFICIARIO)
    REFERENCES biometric_system.BENEFICIARIO (ID_BENEFICIARIO , TD_BENEFICIARIO)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT fk_INGRESO_BENEFICIARIO_HUELLA1
    FOREIGN KEY (ID_INGRESO_BENEF)
    REFERENCES biometric_system.HUELLA (ID_HUELLA)
    ON DELETE CASCADE
    ON UPDATE CASCADE
    )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- INGRESO_CLIENTE
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS biometric_system.INGRESO_CLIENTE
 (
  ID_INGRESO_CLIENTE INT NOT NULL,
  CLIENTE_ID_CLIENTE VARCHAR(15) NOT NULL,
  CLIENTE_TD_CLIENTE VARCHAR(10) NOT NULL,
  PRIMARY KEY (ID_INGRESO_CLIENTE),
  CONSTRAINT fk_INGRESO_CLIENTE_CLIENTE1
    FOREIGN KEY (CLIENTE_ID_CLIENTE , CLIENTE_TD_CLIENTE)
    REFERENCES biometric_system.CLIENTE(ID_CLIENTE , TD_CLIENTE)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT fk_INGRESO_CLIENTE_HUELLA1
    FOREIGN KEY (ID_INGRESO_CLIENTE)
    REFERENCES biometric_system.HUELLA(ID_HUELLA)
    ON DELETE CASCADE
    ON UPDATE CASCADE
    )
ENGINE = InnoDB;

-- -----------------------------------------------------
-- HISTORIAL_ENCENDIDO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS biometric_system.HISTORIAL
(
  ID_HISTORIAL INT AUTO_INCREMENT NOT NULL, 
  FECHA_HISTORIAL DATETIME NOT NULL,
  HORA_HISTORIAL DATETIME NOT NULL,
  FK_CLIENTE_H VARCHAR(15) NOT NULL,
  FK_TD_CLIENTE_H VARCHAR(10) NOT NULL,
  FK_BENEFICIARIO_H VARCHAR(15) NOT NULL,
  FK_TD_BENEFICIARIO_H VARCHAR(10) NOT NULL,
  FK_VEHICULO_H VARCHAR(15) NOT NULL,
  PRIMARY KEY (ID_HISTORIAL),
  CONSTRAINT fk_HISTORIAL_CLIENTE
  FOREIGN KEY (FK_CLIENTE_H,FK_TD_CLIENTE_H)
  REFERENCES biometric_system.CLIENTE(ID_CLIENTE,TD_CLIENTE)
  ON DELETE CASCADE
  ON UPDATE CASCADE,
  CONSTRAINT FK_HISTORIAL_BENEFICIARIO
  FOREIGN KEY (FK_BENEFICIARIO_H, FK_TD_BENEFICIARIO_H)
  REFERENCES biometric_system.BENEFICIARIO(ID_BENEFICIARIO, TD_BENEFICIARIO)
  ON DELETE CASCADE
  ON UPDATE CASCADE,
  CONSTRAINT FK_HISTORIAL_VEHICULO
  FOREIGN KEY(FK_VEHICULO_H)
  REFERENCES biometric_system.VEHICULO(PLACA)
  ON DELETE CASCADE
  ON UPDATE CASCADE
  )
  ENGINE = InnoDB;
  
  
  
  
  CREATE TABLE IF NOT EXISTS biometric_system.PERFIL
(
  ID_PERFIL INT AUTO_INCREMENT NOT NULL, 
  ID_CLIENTE_P VARCHAR(15)NOT NULL,
  TD_CLIENTE_P VARCHAR(10)NOT NULL,
  FK_BENEFICIARIO_P VARCHAR(15) NOT NULL,
  FK_TD_BENEFICIARIO_P VARCHAR(10) NOT NULL,
  FK_VEHICULO_P VARCHAR(15) NOT NULL,
  PRIMARY KEY(ID_PERFIL),
  CONSTRAINT FK_PERFIL_CLIENTE
  FOREIGN KEY (ID_CLIENTE_P,TD_CLIENTE_P)
  REFERENCES biometric_system.CLIENTE(ID_CLIENTE,TD_CLIENTE)
  ON DELETE CASCADE
  ON UPDATE CASCADE,
  CONSTRAINT FK_PERFIL_BENEFICIARIO
  FOREIGN KEY (FK_BENEFICIARIO_P, FK_TD_BENEFICIARIO_P)
  REFERENCES biometric_system.BENEFICIARIO(ID_BENEFICIARIO, TD_BENEFICIARIO)
  ON DELETE CASCADE
  ON UPDATE CASCADE,
  CONSTRAINT FK_PERFIL_VEHICULO
  FOREIGN KEY(FK_VEHICULO_P)
  REFERENCES biometric_system.VEHICULO(PLACA)
  ON DELETE CASCADE
  ON UPDATE CASCADE
  )
  ENGINE = InnoDB;
  
  
 
 

